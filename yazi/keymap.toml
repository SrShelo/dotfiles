
[mgr]
keymap = [
	{ on = "<Esc>",	run = ["escape", "unyank"],	desc = "Exit visual mode, clear selection, cancel search, or cancel the yank status" },
	{ on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selection, or cancel search" },
	{ on = "Q",     run = "quit",								desc = "Quit without outputting cwd-file" },
	{ on = "<C-q>", run = "quit",								desc = "Quit without outputting cwd-file" },
	{ on = "<C-Q>", run = "quit --no-cwd-file", desc = "Quit without outputting cwd-file" },
	# { on = "q",     run = "close",              desc = "Quit the process" },
	# { on = "<C-b>", run = "suspend",            desc = "Suspend the process" },

	# Navigation
	{ on = "h", run = "leave",			desc = "Back to the parent directory" },
	{ on = "j", run = "arrow next", desc = "Next file" },
	{ on = "k", run = "arrow prev", desc = "Previous file" },
	{ on = "l", run = "plugin smart-enter",			desc = "Enter the child directory, or open the file" },
	# { on = "l", run = "open --hovered",			desc = "Enter the child directory, or open the file" },
    # { on = "l", run = "enter",			desc = "Enter the child directory" },

    # { on = "<Enter>", run = "enter",			desc = "Enter the child directory" },

	{ on = "a", run = "leave",			desc = "Back to the parent directory" },
	{ on = "s", run = "arrow prev", desc = "Previous file" },
	{ on = "z", run = "arrow next", desc = "Next file" },
	{ on = "x", run = "plugin smart-enter",			desc = "Enter the child directory, or open the file" },
	# { on = "x", run = "open --hovered",			desc = "Enter the child directory, or open the file" },
    # { on = "x", run = "enter",			desc = "Enter the child directory" },

	{ on = "<Up>",   run = "arrow prev",	desc = "Previous file" },
	{ on = "<Left>",  run = "leave",			desc = "Back to the parent directory" },
	{ on = "<Down>", run = "arrow next",	desc = "Next file" },
	# { on = "<Right>", run = "open --hovered",			desc = "Enter the child directory" },
    { on = "<Right>", run = "enter",			desc = "Enter the child directory" },

	{ on = "<A-S-z>", run = "back",			desc = "Back to previous directory" },
	{ on = "<A-S-s>", run = "forward",	desc = "Forward to next directory" },
	{ on = "H", run = "back",						desc = "Back to previous directory" },
	{ on = "L", run = "forward",				desc = "Forward to next directory" },

	{ on = "<PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },

	{ on = [ "g", "g" ],	run = "arrow top", desc = "Go to top" },
	{ on = "G",						run = "arrow bot", desc = "Go to bottom" },
	{ on = "<S-s>",				run = "arrow top", desc = "Go to top" },
	{ on = "<S-z>",				run = "arrow bot", desc = "Go to bottom" },

	# Go to
	{ on = [ "g", "h" ],				run = "cd ~",             				desc = "Go home" },
	{ on = [ "g", "c" ],				run = "cd ~/.config",     				desc = "Go ~/.config" },
	{ on = [ "g", "d" ],				run = "cd ~/Downloads",   				desc = "Go ~/Downloads" },
	{ on = [ "g", "D" ],				run = "cd ~/Documents",   				desc = "Go ~/Documents" },
	{ on = [ "g", "p" ],				run = "cd ~/Pictures",   				desc = "Go ~/Pictures" },
	{ on = [ "g", "l" ],				run = "cd ~/Lab",   					desc = "Go ~/Lab" },
	{ on = [ "g", "<Space>" ],	run = "cd --interactive", 						desc = "Jump interactively" },
	{ on = [ "g", "f" ],				run = "follow",           				desc = "Follow hovered symlink" },
	{ on = [ "g", "y" ],				run = "cd ~/.config/yazi",				desc = "Go yazi config. file" },
	{ on = [ "g", "b" ],				run = "cd ~/Desktop/Biblioteca",		desc = "Go to Biblioteca" },
	{ on = [ "g", "r" ],				run = 'shell -- ya emit cd "$(git rev-parse --show-toplevel)"',	desc = "Go git repository's root" },
	{ on = [ "g", "/" ],				run = "cd /",				desc = "Go to  root /" },


	# Shell
	{ on = ";",         run = "shell --interactive",         desc = "Run a shell command" },
	{ on = ":",         run = "shell --block --interactive", desc = "Run a shell command (block until finishes)" },

	# Some operations
	{ on = "o",         run = "open",                       desc = "Open selected files" },
	{ on = "O",         run = "open --interactive",         desc = "Open selected files interactively" },
	{ on = "<Enter>",   run = "open",                       desc = "Open selected files" },
	# { on = "<S-Enter>", run = "open --interactive",         desc = "Open selected files interactively" },
	{ on = ".",					run = "hidden toggle",             	desc = "Toggle the visibility of hidden files" },
	{ on = "c",					run = "create",                     desc = "Create a file (ends with / for directories)" },
	{ on = ["i", "i"],         run = "rename --cursor=before_ext",	desc = "Rename selected file(s)" },
	{ on = ["i", "I"],         run = "rename --cursor=start",	desc = "Rename (cursor=start)" },
	{ on = ["i", "0"],         run = "rename --cursor=start",	desc = "Rename (cursor=start)" },
	{ on = ["i", "^"],         run = "rename --cursor=start",	desc = "Rename (cursor=start)" },
	{ on = ["i", "A"],         run = "rename --cursor=end",	desc = "Rename (cursor=end)" },
	{ on = ["i", "$"],         run = "rename --cursor=end",	desc = "Rename (cursor=end)" },
	{ on = ["i", "n"],         run = "rename --hovered --empty=stem --cursor=start",	desc = "Set name to hovered file" },
	{ on = ["i", "e"],         run = "rename --empty=ext",	desc = "Change extension" },
	{ on = "ñ",         run = "link",                       desc = "Symlink the absolute path of yanked files" },
	{ on = "Ñ",         run = "link --relative",            desc = "Symlink the relative path of yanked files" },
	{ on = "<C-ñ>",     run = "hardlink",                   desc = "Hardlink yanked files" },
	{ on = "C",					run = "plugin ouch",								desc = "Compress with ouch" },
	{ on = [ "<C-n>" ], run = '''
    shell 'ripdrag "$@" -x 2>/dev/null &' --confirm
''', desc = "Drag and drop" },

	# Visual mode
	{ on = "v", run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
	{ on = "V", run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },

	# Copy, Cut, Paste, Delete
	{ on = "u",				run = ["unyank", "escape"],		desc = "Cancel the yank status, exit visual mode, clear selection, or cancel search" },
	{ on = "y",         	run = "yank",                 desc = "Copy selected files" },
	{ on = "d",         	run = "yank --cut",           desc = "Cut selected files" },
	{ on = "p",         	run = "paste",                desc = "Paste yanked files" },
	{ on = "P",         	run = "paste --force",        desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = "<C-c>",     	run = "yank",                 desc = "Copy selected files" },
	{ on = "<C-x>",     	run = "yank --cut",           desc = "Cut selected files" },
	{ on = "<C-v>",     	run = "paste",                desc = "Paste yanked files" },
	{ on = "<Backspace>",	run = "remove",               desc = "Trash selected files" },
	{ on = "<S-Backspace>",  	run = "remove --permanently", desc = "Permanently delete selected files" },
	# { on = "<Delete>",  	run = "remove --permanently", desc = "Permanently delete selected files" },

	{ on = [ "<C-z>", "z" ], run = "plugin restore", desc = "(Last) restore deleted files/folders" },
	{ on = [ "<C-z>", "Z" ], run = "shell --block -- conceal restore && clear ; echo \"Don't look at me!\" && sleep 0.5", desc = "(Interactive) restore files" },
	# { on = [ "<C-z>", "Z" ], run = "shell --block -- clear && trash-restore", desc = "(Interactive) restore files" },

    # Sudo actions
{ on = ["<A-s>", "P"], run = "plugin sudo -- paste --force", desc = "sudo paste (force)" },
{ on = ["<A-s>", "r"], run = "plugin sudo -- rename", desc = "sudo rename" },
{ on = ["<A-s>", "p", "l"], run = "plugin sudo -- link", desc = "sudo link" },
{ on = ["<A-s>", "p", "r"], run = "plugin sudo -- link --relative", desc = "sudo link relative path" },
{ on = ["<A-s>", "p", "L"], run = "plugin sudo -- hardlink", desc = "sudo hardlink" },
{ on = ["<A-s>", "a"], run = "plugin sudo -- create", desc = "sudo create" },
{ on = ["<A-s>", "d"], run = "plugin sudo -- remove", desc = "sudo trash" },
{ on = ["<A-s>", "D"], run = "plugin sudo -- remove --permanently", desc = "sudo delete" },
	{ on = [ "<A-s>", "<C-z>", "Z" ], run = "shell --block -- sudo conceal restore && clear ; echo \"Don't look at me!\" && sleep 0.5", desc = "(Sudo, interactive) restore files" },
	{ on = [ "<A-s>", "<C-z>", "z" ], run = "plugin sudo -- plugin restore", desc = "(Sudo, last) restore deleted files/folders" },

	# Yank info
	{ on = [ "Y", "f" ], run = "copy path",             desc = "Copy file path" },
	{ on = [ "Y", "d" ], run = "copy dirname",          desc = "Copy directory path" },
	{ on = [ "Y", "n" ], run = "copy filename",         desc = "Copy filename" },
	{ on = [ "Y", "N" ], run = "copy name_without_ext", desc = "Copy filename without extension" },

	# Select
	{ on = "<Space>", run = [ "toggle", "arrow next" ], desc = "Toggle the current selection state" },
	{ on = "<C-a>",   run = "toggle_all --state=on",    desc = "Select all files" },
	{ on = "<C-r>",   run = "toggle_all",               desc = "Invert selection of all files" },

	# Seeking
	{ on = "K",			run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J",			run = "seek 5",  desc = "Seek down 5 units in the preview" },
	{ on = "<C-A-s>", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "<C-A-z>", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Spotting
	{ on = "<Tab>", run = "spot", desc = "Spot hovered file" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Linemode: size" },
	{ on = [ "m", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
	{ on = [ "m", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
	{ on = [ "m", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Linemode: none" },

	# Filter
	{ on = "f", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "/",	run = "find --smart",            desc = "Find next file" },
	{ on = "|",	run = "find --previous --smart", desc = "Find previous file" },
	{ on = "n",	run = "find_arrow",              desc = "Next found" },
	{ on = "N",	run = "find_arrow --previous",   desc = "Previous found" },

	# Sorting
	{ on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },
	{ on = [ ",", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ ",", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },
	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },
	{ on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },
	{ on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },
	{ on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },
	{ on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	# Tabs
	{ on = "t", run = "tab_create --current", desc = "Create a new tab with CWD" },
	{ on = "q", run = "plugin close-and-restore-tab close_to_left", desc = "Close the current tab, or quit if it's last" },
	{ on = "<C-w>", run = "plugin close-and-restore-tab close_to_left", desc = "Close the current tab, or quit if it's last" },
	{ on = "<A-R>", run = "plugin close-and-restore-tab restore", desc = "Restore the closed tab" },

	{ on = "<A-1>", run = "tab_switch 0", desc = "Switch to first tab" },
	{ on = "<A-2>", run = "tab_switch 1", desc = "Switch to second tab" },
	{ on = "<A-3>", run = "tab_switch 2", desc = "Switch to third tab" },
	{ on = "<A-4>", run = "tab_switch 3", desc = "Switch to fourth tab" },
	{ on = "<A-5>", run = "tab_switch 4", desc = "Switch to fifth tab" },
	{ on = "<A-6>", run = "tab_switch 5", desc = "Switch to sixth tab" },
	{ on = "<A-7>", run = "tab_switch 6", desc = "Switch to seventh tab" },
	{ on = "<A-8>", run = "tab_switch 7", desc = "Switch to eighth tab" },
	{ on = "<A-9>", run = "tab_switch 8", desc = "Switch to ninth tab" },

	{ on = "<A-a>", run = "tab_switch -1 --relative", desc = "Switch to previous tab" },
	{ on = "<A-x>", run = "tab_switch 1 --relative",  desc = "Switch to next tab" },

	{ on = "<A-S-a>", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = "<A-S-x>", run = "tab_swap 1",  desc = "Swap current tab with next tab" },

    # Projects (tabs)
	{ on = [ "<A-p>", "s" ], run = "plugin projects save", desc = "Save current project" },
	{ on = [ "<A-p>", "l" ], run = "plugin projects load", desc = "Load project" },
	{ on = [ "<A-p>", "P" ], run = "plugin projects load_last", desc = "Load last project" },
	{ on = [ "<A-p>", "d" ], run = "plugin projects delete", desc = "Delete project" },
	{ on = [ "<A-p>", "D" ], run = "plugin projects delete_all", desc = "Delete all projects" },
	{ on = [ "<A-p>", "m" ], run = "plugin projects 'merge current'", desc = "Merge current tab to other projects" },
	{ on = [ "<A-p>", "M" ], run = "plugin projects 'merge all'", desc = "Merge current project to other projects" },

	# Tasks
	{ on = "w", run = "tasks:show", desc = "Show task manager" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },

	# MISC
	# https://github.com/yazi-rs/plugins/tree/main/toggle-pane.yazi
	{ on = "<A-T>", run  = "plugin toggle-pane min-preview", desc = "Toggle preview" },
	{ on = "<A-t>", run  = "plugin toggle-pane max-preview", desc = "Toggle big preview" },

]


[tasks]
keymap = [
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = "q",     run = "close", desc = "Close task manager" },
	{ on = "<C-[>", run = "close", desc = "Close task manager" },
	{ on = "<C-c>", run = "close", desc = "Close task manager" },
	{ on = "w",     run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow prev", desc = "Previous task" },
	{ on = "j", run = "arrow next", desc = "Next task" },

	{ on = "<Up>",   run = "arrow prev", desc = "Previous task" },
	{ on = "<Down>", run = "arrow next", desc = "Next task" },

	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "x",       run = "cancel",  desc = "Cancel the task" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]


[spot]
keymap = [
	{ on = "<Esc>", run = "close", desc = "Close the spot" },
	{ on = "q",			run = "close", desc = "Close the spot" },
	{ on = "<C-[>", run = "close", desc = "Close the spot" },
	{ on = "<C-c>", run = "close", desc = "Close the spot" },
	{ on = "<Tab>", run = "close", desc = "Close the spot" },

	{ on = "k", run = "arrow prev", desc = "Previous line" },
	{ on = "j", run = "arrow next", desc = "Next line" },
	{ on = "h", run = "swipe prev", desc = "Swipe to previous file" },
	{ on = "l", run = "swipe next", desc = "Swipe to next file" },

	{ on = "<Up>",    run = "arrow prev", desc = "Previous line" },
	{ on = "<Down>",  run = "arrow next", desc = "Next line" },
	{ on = "<Left>",  run = "swipe prev", desc = "Swipe to previous file" },
	{ on = "<Right>", run = "swipe next", desc = "Swipe to next file" },

	# Copy
	{ on = [ "c", "c" ], run = "copy cell", desc = "Copy selected cell" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]


[pick]
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel pick" },
	{ on = "q",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel pick" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the pick" },

	{ on = "k", run = "arrow prev", desc = "Previous option" },
	{ on = "j", run = "arrow next", desc = "Next option" },

	{ on = "<Up>",   run = "arrow prev", desc = "Previous option" },
	{ on = "<Down>", run = "arrow next", desc = "Next option" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]


[input]
keymap = [
	{ on = "<C-c>",   run = "close",          desc = "Cancel input" },
	{ on = "<Esc>",   run = "close",          desc = "Back to normal mode, or cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },
	{ on = "<C-[>",   run = "escape",         desc = "Back to normal mode, or cancel input" },

	# Mode
	{ on = "i", run = "insert",                          desc = "Enter insert mode" },
	{ on = "I", run = [ "move first-char", "insert" ],   desc = "Move to the BOL, and enter insert mode" },
	{ on = "a", run = "insert --append",                 desc = "Enter append mode" },
	{ on = "A", run = [ "move eol", "insert --append" ], desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                          desc = "Enter visual mode" },
	{ on = "r", run = "replace",                         desc = "Replace a single character" },

	# Selection
	{ on = "V",     run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },
	{ on = "<C-A>", run = [ "move eol", "visual", "move bol" ], desc = "Select from EOL to BOL" },
	{ on = "<C-E>", run = [ "move bol", "visual", "move eol" ], desc = "Select from BOL to EOL" },

	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "b",     run = "backward",                    desc = "Move back to the start of the current or previous word" },
	{ on = "B",     run = "backward --far",              desc = "Move back to the start of the current or previous WORD" },
	{ on = "w",     run = "forward",                     desc = "Move forward to the start of the next word" },
	{ on = "W",     run = "forward --far",               desc = "Move forward to the start of the next WORD" },
	{ on = "e",     run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },
	{ on = "E",     run = "forward --far --end-of-word", desc = "Move forward to the end of the current or next WORD" },
	{ on = "<A-b>", run = "backward",                    desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word",       desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "0",      run = "move bol",        desc = "Move to the BOL" },
	{ on = "$",      run = "move eol",        desc = "Move to the EOL" },
	{ on = "_",      run = "move first-char", desc = "Move to the first non-whitespace character" },
	{ on = "^",      run = "move first-char", desc = "Move to the first non-whitespace character" },
	{ on = "<C-a>",  run = "move bol",        desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move eol",        desc = "Move to the EOL" },
	{ on = "<Home>", run = "move bol",        desc = "Move to the BOL" },
	{ on = "<End>",  run = "move eol",        desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = "d", run = "delete --cut",                                      desc = "Cut selected characters" },
	{ on = "D", run = [ "delete --cut", "move eol" ],                      desc = "Cut until EOL" },
	{ on = "c", run = "delete --cut --insert",                             desc = "Cut selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move eol" ],             desc = "Cut until EOL, and enter insert mode" },
	{ on = "s", run = [ "delete --cut --insert", "move 1" ],               desc = "Cut current character, and enter insert mode" },
	{ on = "S", run = [ "move bol", "delete --cut --insert", "move eol" ], desc = "Cut from BOL until EOL, and enter insert mode" },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ],         desc = "Cut current character" },
	{ on = "y", run = "yank",                                              desc = "Copy selected characters" },
	{ on = "p", run = "paste",                                             desc = "Paste copied characters after the cursor" },
	{ on = "P", run = "paste --before",                                    desc = "Paste copied characters before the cursor" },

	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]


[confirm]
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow prev", desc = "Previous line" },
	{ on = "j", run = "arrow next", desc = "Next line" },

	{ on = "<Up>",   run = "arrow prev", desc = "Previous line" },
	{ on = "<Down>", run = "arrow next", desc = "Next line" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]


[cmp]
keymap = [
	{ on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "input:close --submit" ], desc = "Complete and submit the input" },

	{ on = "<A-k>", run = "arrow prev", desc = "Previous item" },
	{ on = "<A-j>", run = "arrow next", desc = "Next item" },

	{ on = "<Up>",   run = "arrow prev", desc = "Previous item" },
	{ on = "<Down>", run = "arrow next", desc = "Next item" },

	{ on = "<C-p>", run = "arrow prev", desc = "Previous item" },
	{ on = "<C-n>", run = "arrow next", desc = "Next item" },

	# Help
	{ on = "?",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]


[help]
keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-[>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-c>", run = "close",  desc = "Hide the help" },
	{ on = "q",			run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = "k", run = "arrow prev", desc = "Previous line" },
	{ on = "j", run = "arrow next", desc = "Next line" },

	{ on = "s", run = "arrow prev", desc = "Previous line" },
	{ on = "z", run = "arrow next", desc = "Next line" },

	{ on = "<Up>",   run = "arrow prev", desc = "Previous line" },
	{ on = "<Down>", run = "arrow next", desc = "Next line" },

	{ on = "S", run = "arrow top", desc = "Move to the top" },
	{ on = "Z", run = "arrow bot", desc = "Move to the bottom" },
	{ on = ["g", "g"], run = "arrow top", desc = "Move to the top" },
	{ on = "G", run = "arrow bot", desc = "Move to the bottom" },

	{ on = "<PageUp>", run = "arrow -20", desc = "Move to the top" },
	{ on = "<PageDown>", run = "arrow 20", desc = "Move to the bottom" },


	# Filtering
	{ on = "f", run = "filter", desc = "Filter help items" },
	{ on = "/", run = "filter", desc = "Filter help items" },

]

